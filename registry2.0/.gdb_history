b ItemKeyHelperCmd
run
step
step
step
p db
step
p db
step
p db
b ItemDB
run
p db
step
p db
step
p db
step
p db
step
step
p sqlite3_error(db)
sqlite3_errmsg(db)
p sqlite3_errmsg(db)
p (char*)sqlite3_errmsg(db)
step
load registry.dylib
run
bt
run
bt
b EntryObjPropCmd
run
next
c
n
p result
n
p result
n sqlite3_column_text(stmt, 0)
n (char*)sqlite3_column_text(stmt, 0)
p (char*)sqlite3_column_text(stmt, 0)
reset
run
n
print entry->rowid
print entry->db
print query
n
print query
n
print result
print len
print result
print resultObj
n
print resultObj
n
print resultObj
print Tcl_GetString(resultObj)
print (char*)Tcl_GetString(resultObj)
b EntryObjPropCmd
run
load registry.dylib
run
bt
run tests/item.tcl
run tests/item.tcl registry.dylib
bt
b item_search
run tests/item.tcl registry.dylib
b item_create
run tests/item.tcl registry.dylib
n
c
c
b item_key
dis item_create
breakpoints
dis 1
run
c
d 2
b item_search
c
bt
b item_key
run
b item_key
b item_key
run tests/item.tcl registry.dylib
b item_obj_key
r
c
c
c
c
c
c
c
dis 1
dis 2
b item_search
run
en 2
run
c
c
c
c
c
c
c
run
c
c
c
c
c
c
n
p value
run
c
c
c
c
c
c
n
p value
n
n
p key
p value
n
n
p value
n
n
n
p stmt
run
run
b reg_all_objects
b reg_entry_search
c
n
n
n
n
n
n
n
n
n
bt
n
n
n
n
n
n
n
n
n
n
n
n
n
n
p errPtr->description
n
p errPtr->description
n
p errPtr->description
n
c
n
n
p (char*)sqlite3_column_text(stmt,0);
p (char*)sqlite3_column_text(stmt,0)
n
p (char*)sqlite3_column_text(stmt,0)
n
n
p (char*)sqlite3_column_text(stmt,0)
n
p (char*)sqlite3_column_text(stmt,0)
p r
n
p (char*)sqlite3_column_text(stmt,0)
p r
n
n
n
p (char*)sqlite3_column_text(stmt,0)
n
p r
n
b entry.c:282
run
n
p db
n
p db
n
n
p db
n
n
n
n
n
n
p entries
p **entries
p (*entries)[1]
p (*entries)[0]
p *(entries[1])
p *(entries[2])
p entries[3]
p entry_count
s
p objs
p (char*)Tcl_GetString(objs[0])
p (char*)Tcl_GetString(objs[1])
p (char*)Tcl_GetString(objs[2])
p entry_count
